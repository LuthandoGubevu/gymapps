
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Helper Functions ---
    function isAuth() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return isAuth() && request.auth.uid == userId;
    }

    function isAdmin() {
      // To check for admin role, we must be able to read our own user document.
      // The rule on /users/{userId} allows this.
      return isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // --- Rules for 'users' collection ---
    match /users/{userId} {
      // Admins can read any user document and list the entire collection.
      // Users can read and update their own document.
      allow read, update: if isOwner(userId) || isAdmin();
      
      // Users can create their own document on signup.
      allow create: if isOwner(userId);
    }

    // --- Rules for booking collections ---
    match /{bookingCollection=classBookings,trainerBookings}/{bookingId} {
      // Users can create bookings for themselves.
      allow create: if isOwner(request.resource.data.userId);

      // Admins can read/update all bookings. Users can read their own.
      allow read, update: if isAdmin() || (isAuth() && resource.data.userId == request.auth.uid);
      
      // Preserve booking history.
      allow delete: if false;
    }

    // --- Rules for 'chats' collection ---
    match /chats/{locationId}/messages/{messageId} {
      function userBelongsToGym() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryGym == locationId;
      }
      
      // Admins or members of the gym can read the chat.
      allow read: if isAuth() && (isAdmin() || userBelongsToGym());

      // Admins can post announcements. Members can post messages.
      allow create: if isAuth() && ( (isAdmin() && request.resource.data.sender.id == 'admin') || (userBelongsToGym() && isOwner(request.resource.data.sender.id)) );
      
      // Admins can delete messages.
      allow delete: if isAdmin();
      
      // Messages are immutable.
      allow update: if false;
    }
  }
}
