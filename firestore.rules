
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user status and roles.
    function isSignedIn() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function isAdmin() {
      return isSignedIn() && getUserData().role == 'admin';
    }

    // Rules for the 'users' collection.
    // Admins can list all users for analytics.
    // Users can only read and update their own profile.
    match /users/{userId} {
      allow read, update: if isUser(userId) || isAdmin();
      allow list: if isAdmin();
      allow create: if isSignedIn();
    }

    // Rules for the 'gyms' collection.
    // Any signed-in user can see the list of gyms.
    // Only admins can create, update, or delete gyms.
    match /gyms/{gymId} {
      allow read, list: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Rules for 'classBookings'.
    // Admins can list and update all bookings.
    // Users can create bookings, and can only read their own.
    match /classBookings/{bookingId} {
      allow create: if isSignedIn();
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == resource.data.userId);
      allow list, update: if isAdmin();
    }

    // Rules for 'trainerBookings'.
    // Same logic as class bookings.
    match /trainerBookings/{bookingId} {
      allow create: if isSignedIn();
      allow read: if isAdmin() || (isSignedIn() && request.auth.uid == resource.data.userId);
      allow list, update: if isAdmin();
    }

    // Rules for 'chats'.
    // Users can only read/write in their primary gym's chat.
    // Admins have full access to all chats for moderation.
    match /chats/{gymId}/messages/{messageId} {
      allow read, write: if isAdmin() || (isSignedIn() && getUserData().primaryGym == gymId);
      allow delete: if isAdmin();
    }
  }
}
