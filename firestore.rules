
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is an admin.
    function isAdmin() {
      // Check if user is authenticated first to avoid errors on unauthenticated requests.
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Helper function to check if the user is authenticated.
    function isAuthenticated() {
      return request.auth != null;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Admins can read/write any user document. Users can read/update their own.
      allow read, update: if isAuthenticated() && (isAdmin() || request.auth.uid == userId);
      // An authenticated user can create their own user document during sign-up.
      allow create: if isAuthenticated();
    }

    // Rules for class bookings
    match /classBookings/{bookingId} {
        // Admins can read all bookings (for listing) and update their status.
        allow read, update: if isAdmin();
        // A user can create a booking for themselves.
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Rules for trainer bookings
    match /trainerBookings/{bookingId} {
        // Admins can read all bookings (for listing) and update their status.
        allow read, update: if isAdmin();
        // A user can create a booking for themselves.
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
    }

    // Rules for location-based chats
    match /chats/{locationId}/messages/{messageId} {
      // Users can read messages in their primary gym's chat. Admins can read any chat.
      allow read: if isAuthenticated() && (isAdmin() || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryGym == locationId);

      // Admins can delete messages for moderation.
      allow delete: if isAdmin();

      // Creating messages:
      // - Announcements can only be posted by admins.
      // - Regular messages can be posted by a user in their primary gym's chat.
      allow create: if isAuthenticated() && (
        (request.resource.data.isAnnouncement == true && isAdmin()) ||
        (
            get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryGym == locationId &&
            request.resource.data.sender.id == request.auth.uid
        )
      );
    }
  }
}
