
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isUserAuthenticated() {
      return request.auth != null;
    }

    function isUser(uid) {
      return isUserAuthenticated() && request.auth.uid == uid;
    }

    function userRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role;
    }

    function isAdmin() {
      return isUserAuthenticated() && userRole() == 'admin';
    }

    match /users/{userId} {
      allow read: if isUser(userId) || isAdmin();
      allow create: if isUser(userId);
      allow update: if isUser(userId);
      allow delete: if isAdmin();
      allow list: if isAdmin();
    }

    match /gyms/{gymId} {
      // Gym list must be public for the sign-up form and general app info.
      allow read: if true; 
      // Only admins can create, update, or delete gym locations.
      allow create, update, delete: if isAdmin();
    }
    
    match /chats/{gymId}/messages/{messageId} {
      allow read: if isUserAuthenticated() && (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryGym == gymId || isAdmin());
      allow create: if isUserAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryGym == gymId;
      allow delete: if isAdmin();
    }
    
    match /classBookings/{bookingId} {
      allow read, list: if isAdmin();
      allow create: if isUserAuthenticated();
      allow update: if isAdmin();
    }
    
    match /trainerBookings/{bookingId} {
      allow read, list: if isAdmin();
      allow create: if isUserAuthenticated();
      allow update: if isAdmin();
    }
  }
}
