
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuth() {
      return request.auth != null;
    }

    function isUser(userId) {
      return isAuth() && request.auth.uid == userId;
    }
    
    function isAdmin() {
      // Check if the user document exists and has the admin role.
      return isAuth() && exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // USERS
    // Users can read/update their own profile. Admins can read any profile.
    match /users/{userId} {
      allow read, update: if isUser(userId) || isAdmin();
      // Only admins can list all users (for dashboards) or create/delete them.
      allow list, create, delete: if isAdmin();
    }

    // GYMS
    // Anyone can read and list gyms (for signup). Admins have full write access.
    match /gyms/{gymId} {
      allow read, list: if true;
      allow create, update, delete: if isAdmin();
    }
    
    // USER PRESENCE
    // Users can update their own presence. Any authenticated user can read presence data for crowd counts.
    match /userPresence/{userId} {
      allow read, list: if isAuth();
      allow write: if isUser(userId);
    }
    
    // BOOKINGS (CLASSES & TRAINERS)
    // Users can create bookings and read their own. Admins can manage all bookings.
    match /classBookings/{bookingId} {
      allow create: if isAuth();
      allow read, update: if (isAuth() && request.auth.uid == resource.data.userId) || isAdmin();
      allow list, delete: if isAdmin();
    }
    
    match /trainerBookings/{bookingId} {
      allow create: if isAuth();
      allow read, update: if (isAuth() && request.auth.uid == resource.data.userId) || isAdmin();
      allow list, delete: if isAdmin();
    }
    
    // CHATS
    // Users can only access chat for their primary gym. Admins can moderate all chats.
    match /chats/{gymId}/messages/{messageId} {
       allow read, list, write: if (isAuth() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.primaryGym == gymId) || isAdmin();
    }
  }
}
